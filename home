<!DOCTYPE html>
<html>
<head>
	<title>Apple Park Interactive Representation</title>
	<link rel="stylesheet" type="text/css" href="style.css">
    <style>
    body {
    background-color: #e6e6e6;
    margin: 0;
    padding: 0;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    }
    
    .vl {
      border-left: 1px solid black;
      height: 500px;
    }

    .ring-container {
      position: relative;
      /* position: absolute;
      top: 50%;
      left: 50%; */
      width: 400px;
      height: 400px;
    }
    
    .ring {
      position: absolute;
      top: 0;
      left: 0;
      width: 400px;
      height: 400px;
      border-radius: 50%;
      border: 20px solid #fff;
      box-shadow: inset 0px 0px 20px rgba(0,0,0,0.2);
    }
    
    .outer-circle {
      position: absolute;
      top: 50px;
      left: 50px;
      width: 300px;
      height: 300px;
      border-radius: 50%;
      border: 10px solid #ddd;
      box-shadow: 0px 0px 20px rgba(0,0,0,0.2);
    }
    
    .inner-circle {
      position: absolute;
      top: 100px;
      left: 100px;
      width: 200px;
      height: 200px;
      border-radius: 50%;
      border: 10px solid #fff;
      box-shadow: 0px 0px 20px rgba(0,0,0,0.2);
    }
    
    .building {
      position: absolute;
      top: 150px;
      left: 150px;
      width: 100px;
      height: 100px;
      border-radius: 50%;
      background-color: #333;
      box-shadow: 0px 0px 20px rgba(0,0,0,0.2);
      cursor: move;
      z-index: 10;
    }

    .building:hover {
      background-color: #474747;
    }
    
    .theater-container {
      position: relative;
      width: 400px;
      height: 400px;
      margin-left: 50px;
    }
    
    .theater {
      position: absolute;
      top: 0;
      left: 0;
      width: 400px;
      height: 400px;
      border-radius: 50%;
      background-color: #333;
      box-shadow: inset 0px 0px 20px rgba(0,0,0,0.2);
    }
    
    .roof {
      position: absolute;
      top: 80px;
      left: 0;
      width: 400px;
      height: 200px;
      background-color: #ddd;
      transform: skewY(-20deg);
    } 

    .box {
      border: 0.5px solid;
      border-color: #333;
      width: 94%;
      height: 90%;
      border-radius: 10px;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      position: relative;
    } 

    .total-container {
      display: flex;    
      justify-content: center;
      align-items: center;
      flex-direction: row;
    }

    .link-container {
      display: flex;
      position: absolute;
      bottom: 0;
      flex-direction: row;
      gap: 10px;
    }

    a:link {
      text-decoration: none;
      color: #333;
    }

    a:visited {
      text-decoration: none;
      color: #333;
    }

    a:hover {
      text-decoration: none;
      color: #9b9b9b;
    }

    a:active {
      text-decoration: none;
      color: #9b9b9b;
    }
    </style>
</head>

<body></body>
  <div class="box">
    <div class="total-container">
      <div class="ring-container">
        <div class="ring"></div>
        <div class="inner-circle"></div>
        <div class="outer-circle"></div>
        <div id="dragMe" class="building"></div>
      </div>
      <div class="theater-container">
        <div class="theater"></div>
        <div id="dragTarget" class="roof"></div>
      </div>
      <div class="park-container">
        <div class="park"></div>
        <div class="pond"></div>
      </div>
    </div>
    <div class="link-container">
      <p><a href="https://policies.google.com/privacy?hl=en-US">Privacy</a></p>
      <p><a href="https://policies.google.com/terms?hl=en-US">Term</a></p>
    </div>
	</div>
</body>
</html>

<script>
  function clickBlackCircle() {
    location.href = "Apple2.html";
  }

  // The current position of mouse
  let x = 0;
  let y = 0;

  // Query the element
  const ele = document.getElementById('dragMe');
  const target = document.getElementById('dragTarget');

  // Handle the mousedown event
  // that's triggered when user drags the element
  const mouseDownHandler = function (e) {
      // Get the current mouse position
      x = e.clientX;
      y = e.clientY;

      // Attach the listeners to `document`
      document.addEventListener('mousemove', mouseMoveHandler);
      document.addEventListener('mouseup', mouseUpHandler);
  };

  const mouseMoveHandler = function (e) {
      // How far the mouse has been moved
      const dx = e.clientX - x;
      const dy = e.clientY - y;

      // Set the position of element
      ele.style.top = `${ele.offsetTop + dy}px`;
      ele.style.left = `${ele.offsetLeft + dx}px`;

      // Reassign the position of mouse
      x = e.clientX;
      y = e.clientY;
  };

  const mouseUpHandler = function () {
      // Remove the handlers of `mousemove` and `mouseup`
      document.removeEventListener('mousemove', mouseMoveHandler);
      document.removeEventListener('mouseup', mouseUpHandler);
      
      const eleRec = ele.getBoundingClientRect();
      const targRec = target.getBoundingClientRect();
      
      if (eleRec.left >= targRec.left && eleRec.right <= targRec.right && eleRec.top >= targRec.top && eleRec.bottom <= eleRec.bottom) {
        
        location.href = "Loading.html";
      }
  };

  ele.addEventListener('mousedown', mouseDownHandler);
</script>
